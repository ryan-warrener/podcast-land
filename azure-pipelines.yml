  trigger:

  - master

  pool:
    vmImage: 'Ubuntu-latest'
  
  variables:
    buildConfiguration: release

  steps:
  - task: DotNetCoreCLI@2
    displayName: 'Build'
    inputs:
      command: 'build'

  - task: DotNetCoreCLI@2
    displayName: 'Publish'
    inputs:
      command: 'publish'
      publishWebProjects: true
      arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)//codedeploy//app'
      zipAfterPublish: true

  - task: CopyFiles@2
    inputs:
      SourceFolder: 'codedeploy'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)//codedeploy'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)//codedeploy'
      includeRootFolder: true
      archiveType: 'tar'
      tarCompression: gz
      archiveFile: '$(Build.ArtifactStagingDirectory)//codedeploy.tar.gz'
      replaceExistingArchive: true

  - task: CodeDeployDeployApplication@1
    inputs:
      awsCredentials: 'AWS CodeDeploy Bucket'
      regionName: 'us-east-1'
      applicationName: 'podcast-land'
      deploymentGroupName: 'linux-dg'
      deploymentRevisionSource: 'workspace'
      revisionBundle: '$(Build.ArtifactStagingDirectory)//codedeploy.tar'
      bucketName: 'ryan-warrener-codedeploy'